// scripts/generatePhotoList.js
const fs = require("fs-extra"); // Use fs-extra or just 'fs'
const path = require("path");

const photosDirectory = path.join(__dirname, "../public/photos");
const outputFile = path.join(__dirname, "../src/photoListData.js"); // Output to src folder
const allowedExtensions = [".jpg", ".jpeg", ".png", ".gif", ".webp"]; // Add other extensions if needed

async function generateList() {
  try {
    // Ensure the photos directory exists
    if (!(await fs.pathExists(photosDirectory))) {
      console.warn(`Photos directory not found: ${photosDirectory}`);
      // Create an empty list if directory doesn't exist
      await fs.writeFile(outputFile, "export const photoUrls = [];\n");
      console.log("Generated empty photo list.");
      return;
    }

    // Read directory contents
    const files = await fs.readdir(photosDirectory);

    // Filter for allowed image extensions and map to URL paths
    const photoUrls = files
      .filter((file) => {
        const ext = path.extname(file).toLowerCase();
        return allowedExtensions.includes(ext);
      })
      .map((file) => `/photos/${file}`); // Create paths relative to public folder

    // Create the content for the JS file
    const fileContent = `// This file is auto-generated by scripts/generatePhotoList.js
// Do not edit manually!

export const photoUrls = ${JSON.stringify(photoUrls, null, 4)};
`;
    // Write the file
    await fs.writeFile(outputFile, fileContent);
    console.log(
      `Successfully generated photo list in ${outputFile} with ${photoUrls.length} photos.`
    );
  } catch (error) {
    console.error("Error generating photo list:", error);
    // Optionally write an empty list on error
    await fs.writeFile(outputFile, "export const photoUrls = [];\n");
  }
}

generateList();
